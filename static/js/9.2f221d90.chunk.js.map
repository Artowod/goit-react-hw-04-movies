{"version":3,"sources":["components/Reviews/Reviews.jsx"],"names":["Reviews","movieId","useState","reviews","setReviews","useEffect","getMovieReviewsRequest","then","data","catch","error","console","log","className","s","wrapper","results","length","map","id","author","content"],"mappings":"mMA4CeA,UAvCC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACjB,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAWA,OATAC,qBAAU,WACRC,YAAuBL,GACpBM,MAAK,SAAAC,GAAI,OAAIA,GAAQJ,EAAWI,MAChCC,OAAM,SAAAC,GACLC,QAAQC,IAAI,UAAWF,QAG1B,IAGD,mCACE,qBAAKG,UAAWC,IAAEC,QAAlB,SACGZ,EAAQa,SAAsC,IAA3Bb,EAAQa,QAAQC,OAClC,yEAEA,6BACGd,EAAQa,SACPb,EAAQa,QAAQE,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACjC,OACE,qBAAaR,UAAWC,IAAEM,OAA1B,UACGA,GAAU,qBAAIP,UAAWC,IAAEM,OAAjB,qBAAkCA,KAC7C,mBAAGP,UAAWC,IAAEO,QAAhB,SAA0BA,MAFnBF,c","file":"static/js/9.2f221d90.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { getMovieReviewsRequest } from '../../shared/services/Api.jsx';\r\nimport s from './Reviews.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Reviews = ({ movieId }) => {\r\n  const [reviews, setReviews] = useState({});\r\n\r\n  useEffect(() => {\r\n    getMovieReviewsRequest(movieId)\r\n      .then(data => data && setReviews(data))\r\n      .catch(error => {\r\n        console.log('error: ', error);\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className={s.wrapper}>\r\n        {reviews.results && reviews.results.length === 0 ? (\r\n          <p>We don`t have any reviews for this movie</p>\r\n        ) : (\r\n          <ul>\r\n            {reviews.results &&\r\n              reviews.results.map(({ id, author, content }) => {\r\n                return (\r\n                  <li key={id} className={s.author}>\r\n                    {author && <h3 className={s.author}>Author: {author}</h3>}\r\n                    <p className={s.content}>{content}</p>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nReviews.propTypes = {\r\n  movieIt: PropTypes.string,\r\n};\r\n\r\nexport default Reviews;\r\n"],"sourceRoot":""}