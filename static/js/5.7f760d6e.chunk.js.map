{"version":3,"sources":["shared/services/Api.jsx","components/MoviesList/MoviesList.module.css","components/MoviesList/MoviesList.jsx","pages/HomePage.jsx"],"names":["getTrendingRequest","sendParam","api_key","axios","get","host","endpoint","getTrending","params","getMovieDetailRequest","id","getMovieDetail","catch","error","console","log","toJSON","Promise","reject","Error","then","data","getMovieCreditsRequest","getMovieReviewsRequest","searchMovie","query","module","exports","MoviesList","moviesData","prevPageParam","className","s","wrapper","map","title","item","to","pathname","state","HomePage","useState","gallery","setGallery","useEffect","results","name"],"mappings":"yIAAA,uMAIO,SAASA,IACd,IAAMC,EAAY,CAChBC,aAOF,OAJiBC,IAAMC,IAAIC,IAAOC,IAASC,YAAa,CACtDC,OAAQP,IAML,SAASQ,EAAsBC,GACpC,IAAMT,EAAY,CAChBC,aAYF,OATiBC,IACdC,IAAIC,IAAOC,IAASK,eAAiBD,EAAI,CACxCF,OAAQP,IAETW,OAAM,SAAUC,GAEf,OADAC,QAAQC,IAAIF,EAAMG,UACXC,QAAQC,OAAO,IAAIC,MAAM,iBAGpBC,MAAK,qBAAGC,QAGnB,SAASC,EAAuBZ,GACrC,IAAMT,EAAY,CAChBC,aAYF,OATiBC,IACdC,IAAIC,IAAOC,IAASK,eAAiBD,EAAK,WAAY,CACrDF,OAAQP,IAETW,OAAM,SAAUC,GAEf,OADAC,QAAQC,IAAIF,EAAMG,UACXC,QAAQC,OAAO,IAAIC,MAAM,iBAGpBC,MAAK,qBAAGC,QAGnB,SAASE,EAAuBb,GACrC,IAAMT,EAAY,CAChBC,aAYF,OATiBC,IACdC,IAAIC,IAAOC,IAASK,eAAiBD,EAAK,WAAY,CACrDF,OAAQP,IAETW,OAAM,SAAUC,GAEf,OADAC,QAAQC,IAAIF,EAAMG,UACXC,QAAQC,OAAO,IAAIC,MAAM,iBAGpBC,MAAK,qBAAGC,QAGnB,SAASG,EAAYC,GAC1B,IAAMxB,EAAY,CAChBC,YACAuB,SAOF,OAJiBtB,IAAMC,IAAIC,IAAOC,IAASkB,YAAa,CACtDhB,OAAQP,M,+RCzEZyB,EAAOC,QAAU,CAAC,QAAU,8B,qGC8BbC,EA3BI,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,cAChC,OACE,qBAAKC,UAAWC,IAAEC,QAAlB,SACE,6BACGJ,EAAWK,KAAI,gBAAGC,EAAH,EAAGA,MAAOzB,EAAV,EAAUA,GAAV,OACd,oBAAIqB,UAAWC,IAAEI,KAAjB,SACE,eAAC,IAAD,CACEC,GAAI,CACFC,SAAS,WAAD,OAAa5B,GACrB6B,MAAO,CAAET,cAAeA,IAH5B,UAMG,IACAK,EAAO,QARgBzB,Y,iFCgBvB8B,UArBE,WACf,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAYA,OAVAC,qBAAU,WACR5C,cACGoB,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPsB,EAAWtB,EAAKwB,YAEjBjC,OAAM,SAAAC,GACLC,QAAQC,IAAI,UAAWF,QAE1B,IAGD,qCACE,gDACA,cAAC,IAAD,CAAYiC,KAAM,iBAAkBjB,WAAYa","file":"static/js/5.7f760d6e.chunk.js","sourcesContent":["import { api_key, host, endpoint } from './settings.json';\r\n\r\nimport axios from 'axios';\r\n\r\nexport function getTrendingRequest() {\r\n  const sendParam = {\r\n    api_key,\r\n  };\r\n\r\n  const response = axios.get(host + endpoint.getTrending, {\r\n    params: sendParam,\r\n  });\r\n\r\n  return response;\r\n}\r\n\r\nexport function getMovieDetailRequest(id) {\r\n  const sendParam = {\r\n    api_key,\r\n  };\r\n\r\n  const response = axios\r\n    .get(host + endpoint.getMovieDetail + id, {\r\n      params: sendParam,\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error.toJSON());\r\n      return Promise.reject(new Error('Not found'));\r\n    });\r\n\r\n  return response.then(({ data }) => data);\r\n}\r\n\r\nexport function getMovieCreditsRequest(id) {\r\n  const sendParam = {\r\n    api_key,\r\n  };\r\n\r\n  const response = axios\r\n    .get(host + endpoint.getMovieDetail + id + '/credits', {\r\n      params: sendParam,\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error.toJSON());\r\n      return Promise.reject(new Error('Not found'));\r\n    });\r\n\r\n  return response.then(({ data }) => data);\r\n}\r\n\r\nexport function getMovieReviewsRequest(id) {\r\n  const sendParam = {\r\n    api_key,\r\n  };\r\n\r\n  const response = axios\r\n    .get(host + endpoint.getMovieDetail + id + '/reviews', {\r\n      params: sendParam,\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error.toJSON());\r\n      return Promise.reject(new Error('Not found'));\r\n    });\r\n\r\n  return response.then(({ data }) => data);\r\n}\r\n\r\nexport function searchMovie(query) {\r\n  const sendParam = {\r\n    api_key,\r\n    query,\r\n  };\r\n\r\n  const response = axios.get(host + endpoint.searchMovie, {\r\n    params: sendParam,\r\n  });\r\n\r\n  return response;\r\n}\r\n\r\n//=====================================\r\n\r\n//   \"api_key\": \"13b5a298ebf841dea0e3d6624b351e0e\",\r\n//   \"host\": \"https://api.themoviedb.org/3/\",\r\n//   \"endpoint\": {\r\n//     \"getTrending\": \"trending/movie/day\", //https://api.themoviedb.org/3/trending/movie/day?api_key=13b5a298ebf841dea0e3d6624b351e0e\r\n//     \"searchMovie\": \"search/movie\", // https://api.themoviedb.org/3/search/movie?api_key=13b5a298ebf841dea0e3d6624b351e0e&language=en-US&page=1&include_adult=false&query=steel\r\n//     \"getMovieDetail\": \"movie/<<id>>\", // https://api.themoviedb.org/3/movie/370172?api_key=13b5a298ebf841dea0e3d6624b351e0e&language=en-US\r\n//     \"getMovieCredits\": \"movie/<<id>>/credits\", // https://api.themoviedb.org/3/movie/370172/credits?api_key=13b5a298ebf841dea0e3d6624b351e0e&language=en-US\r\n//     \"getMovieReviews\": \"movie/<<id>>/reviews\" //https://api.themoviedb.org/3/movie/370172/reviews?api_key=13b5a298ebf841dea0e3d6624b351e0e&language=en-US&page=1\r\n//   }\r\n// }\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MoviesList_wrapper__uCjWl\"};","import s from './MoviesList.module.css';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MoviesList = ({ moviesData, prevPageParam }) => {\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <ul>\r\n        {moviesData.map(({ title, id }) => (\r\n          <li className={s.item} key={id}>\r\n            <Link\r\n              to={{\r\n                pathname: `/movies/${id}`,\r\n                state: { prevPageParam: prevPageParam },\r\n              }}\r\n            >\r\n              {' '}\r\n              {title}{' '}\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nMoviesList.propTypes = {\r\n  moviesData: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  prevPageParam: PropTypes.string,\r\n};\r\n\r\nexport default MoviesList;\r\n","import MoviesList from '../components/MoviesList';\r\nimport { getTrendingRequest } from '../shared/services/Api.jsx';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst HomePage = () => {\r\n  const [gallery, setGallery] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getTrendingRequest()\r\n      .then(({ data }) => {\r\n        setGallery(data.results);\r\n      })\r\n      .catch(error => {\r\n        console.log('error: ', error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h1>Trending today</h1>\r\n      <MoviesList name={'favorite Movie'} moviesData={gallery} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"sourceRoot":""}